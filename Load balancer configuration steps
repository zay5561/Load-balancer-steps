The steps i took to complete project 3 are as follows: 

use the gcloud config set compute/region region command to change to 

use the gloud config set compute/zone zone command to chage my zone to us-east1-b

after my configurations were set, I went ahead and created my www1 www2 and ww3 instances using 
the following command for all three:  
--------------------------------------------------
gcloud compute instances create www1 \
    --zone=Zone \
    --tags=network-lb-tag \
    --machine-type=e2-small \
    --image-family=debian-11 \
    --image-project=debian-cloud \
    --metadata=startup-script='#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: www1</h3>" | tee /var/www/html/index.html'
---------------------------------------------------

I changed the zone to "$ZONE" because that variable is the default zone for this project

after all three instances were created, i created a firewall with the command:
gcloud compute firewall-rules create www-firewall-network-lb \
    --target-tags network-lb-tag --allow tcp:80

Next I used the gcloud compute instances list to get a list of the instances made on the project 

After seeing the instances running and had been given external IPs I moved on to the next task of configuring the 
load balance server 

The first step of this task was to create a static external IP address. I did this by using the code 

gcloud compute addresses create network-lb-ip-1 \
--region and replaced the region with us-east1

After it was created and my output matched the guide :
"Created [https://www.googleapis.com/compute/v1/projects/sysadmin-5561/regions/us-east1/addresses/network-lb-ip-1]"

I added a legacy http help check resource by using the gcloud compute http-health-checks create basic-check 

Afterwards i created a target pool in the same region as my instances using the code: 
gcloud compute target-pools create www-pool \
  --region Region --http-health-check basic-check

and added the instances to the pool using: 
gcloud compute target-pools add-instances www-pool \
    --instances www1,www2,www3

additionally i created a rule for forwarding with: 
----------------------------------------
gcloud compute forwarding-rules create www-rule \
    --region  us-east1 \
    --ports 80 \
    --address network-lb-ip-1 \
    --target-pool www-pool
----------------------------------------
Specfying my region to be the same as all the instances 

It's now time to send traffic to my instances  

first i entered the folowing command to gain access to the external IP:
IPADDRESS=$(gcloud compute forwarding-rules describe www-rule --region Region --format="json" | jq -r .IPAddress)

and echoed the variable $IPADDRESS to get the external ip.

Once i knew the external IP I did the command: while true; do curl -m1 35.196.73.6; done

and let it run for a bit before pressing ctrl+c to make it stop. 

Now it's time to create the load balancer  

first i created the load balancer template with this code:
---------------------------------------------------
gcloud compute instance-templates create lb-backend-template \
   --region=Region \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'
----------------------------------------------------
Replacing the region with my respective region and leaving the rest as is  

after the template was created, I also made a managed instance group using:
gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=Zone

replacing the zone with my respective zone

the next step was to create a firewall rule:
---------------------------------------------
gcloud compute firewall-rules create fw-allow-health-check \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:80
----------------------------------------------

these were the parameters and code used for the firewall 

after that was completed i needed to set up a global static external ip that customers can use.
This was done by using the code:
gcloud compute addresses create lb-ipv4-1 \
  --ip-version=IPV4 \
  --global

After i checked that the external ip was saved with:
gcloud compute addresses describe lb-ipv4-1 \
  --format="get(address)" \
  --global
and it outputted the external ip 

next i created a health check for the loadbalancer with: 
gcloud compute health-checks create http http-basic-check \
  --port 80

Next i was tasked with creating a backend service for the load balancer
I was able to do this by using the command:

gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global

now im supposed to add my instancs as the backend to the backend service
THis code allowed for me to do that, replacing zone with my respective zone for my instances:

gcloud compute backend-services add-backend web-backend-service \
  --instance-group=lb-backend-group \
  --instance-group-zone=Zone \
  --global

The next step is to create a URL Map to route the incoming requests to the default backend service
This was done by executing the following command: 

gcloud compute url-maps create wab-map-http \
    --default-service web-backend-service

**there was a type on web and it was spelled wab put i kept it the same throughout 

Now we need to create a target HTTP proxy to route requests to the map we've created
This is done with the following command: 

gcloud compute target-http-proxies create http-lb-proxy \
    --url-map wab-map-http

once the target http proxy is made we're now tasked with creating a global forwarding tule to route incoming 
requests to the proxy, This was done with the following code:

gcloud compute forwarding-rules create http-content-rule \
   --address=lb-ipv4-1\
   --global \
   --target-http-proxy=http-lb-proxy \
   --ports=80

once it is created we can begin testing traffic sent to my instanes
This is done by going to the google cloud console and going to the network tab
once there, go to the load balancer tab and click the one we just made, that being wab-map-http 
once there scroll down to backends to make sure instances are functioning properly 
once you see there functioning properly type the following into a url:
http://35.186.220.1 and it should render a page with the instance that served the page

